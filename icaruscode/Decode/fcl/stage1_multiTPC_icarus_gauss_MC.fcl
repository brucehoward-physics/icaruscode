
#include "mchitmodules.fcl"
#include "mcreco.fcl"
#include "mctrutht0matching.fcl"
#include "stage1_icarus_driver_common.fcl"

process_name: MCstage1

## Add the MC module to the list of producers
physics.producers: {
            @table::icarus_stage1_producers


            mcophit:                        @local::ICARUSMCOpHit
            mcopflashTPC0:                  @local::ICARUSMCOpFlashTPC0
            mcopflashTPC1:                  @local::ICARUSMCOpFlashTPC1
            mcopflashTPC2:                  @local::ICARUSMCOpFlashTPC2
            mcopflashTPC3:                  @local::ICARUSMCOpFlashTPC3
          
            cheatopflashTPC0:               @local::ICARUSCheatOpFlashTPC0
            cheatopflashTPC1:               @local::ICARUSCheatOpFlashTPC1
            cheatopflashTPC2:               @local::ICARUSCheatOpFlashTPC2
            cheatopflashTPC3:               @local::ICARUSCheatOpFlashTPC3

            ### mc producers
            mchitfinder:                    @local::standard_mchitfinder
            mcassociationsGausCryoE:        @local::standard_mcparticlehitmatching
            mcassociationsGausCryoW:        @local::standard_mcparticlehitmatching
}

physics.reco: [ 
                @sequence::icarus_reco_Gauss_CryoE ,
                @sequence::icarus_reco_Gauss_CryoW ,
                caloskimCalorimetryCryoE, caloskimCalorimetryCryoW,
                mcassociationsGausCryoE,  mcassociationsGausCryoW
              ]

physics.outana:            [ caloskimE, caloskimW, simpleLightAna]
physics.trigger_paths:     [ reco ]
physics.end_paths:         [ outana, stream1 ]
outputs.out1.fileName:     "%ifb_%tc-%p.root"
outputs.out1.dataTier:     "reconstructed"
outputs.out1.SelectEvents: [ reco ]
outputs.out1.outputCommands: [
  "keep *_*_*_*",
  "drop *_caloskimCalorimetryCryoE_*_*",
  "drop *_caloskimCalorimetryCryoW_*_*"
]

# Disabled Space-Charge service for calorimetry
services.SpaceChargeService: {
    EnableCalEfieldSCE: false
    EnableCalSpatialSCE: false
    EnableCorrSCE: false
    EnableSimEfieldSCE: false
    EnableSimSpatialSCE: false
    InputFilename: "SCEoffsets/SCEoffsets_ICARUS_E500_voxelTH3.root"
    RepresentationType: "Voxelized_TH3"
    service_provider: "SpaceChargeServiceICARUS"
}

services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "DEBUG"     #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       Cluster3D:
       {
         limit: -1
         reportEvery: 1
       }
       PMAlgTracker:
       {
         limit: -1
         reportEvery: 1
       }
       default:
       {
         limit: 0  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 0
       }
     }
  }
}

